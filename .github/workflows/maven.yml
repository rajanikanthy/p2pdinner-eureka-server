# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: mvn -B package --file pom.xml
      - name: Staging
        run: mkdir staging && cp -rvf target staging && cp Dockerfile staging
      - name: Upload maven artifact
        uses: actions/upload-artifact@v3
        with:
          name: deploy-artifact
          path: staging
      - run: ls -altr
      - run: |
         JSON=$(cat metadata.json)
         echo "::set-output name=matrix::${JSON//'%'/'%25'}"
  package:
    runs-on: ubuntu-latest
    needs: [ setup ]
    strategy:
      matrix: ${{fromJson(needs.build.outputs.matrix)}}
    steps:
      - name: Display setup
        run: echo ${{ matrix.imageName }}
      - name: Download a Build Artifact
        uses: actions/download-artifact@v3.0.0
        id: download
        with:
          name: deploy-artifact
      - name: Echo files in deploy folder
        run: ls -altr ${{steps.download.outputs.download-path}}
      - name: Set docker tag
        run: echo "DOCKER_TAG=$(date +%s)" >> $GITHUB_ENV
      - name: Output docker tag
        run: echo ${{ env.DOCKER_TAG }}
      - name: Build the Docker image
        run: cd ${{steps.download.outputs.download-path}} && docker build . --file Dockerfile --tag registry.digitalocean.com/p2pdinner/config-server:${{ env.DOCKER_TAG }}
      - name: Docker login
        uses: docker/login-action@v2
        with:
          registry: registry.digitalocean.com
          username: ${{ secrets.DOCN_CR_ACCESS_TOKEN }}
          password: ${{ secrets.DOCN_CR_ACCESS_TOKEN }}
          logout: true
      - name: Push image to registry
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: registry.digitalocean.com/p2pdinner/config-server:${{ env.DOCKER_TAG }}

